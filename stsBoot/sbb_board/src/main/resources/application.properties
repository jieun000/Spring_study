spring.application.name=sbb_board
# H2 콘솔에 접속할 것인지를 물음. H2 콘솔은 H2 데이터베이스를 웹 UI로 보여줌.
spring.h2.console.enabled=true
# H2 콘솔로 접속하기 위한 URL 경로
spring.h2.console.path=/h2-console
# 데이터베이스에 접속하기 위한 경로
spring.datasource.url=jdbc:h2:~/local
# 데이터베이스에 접속할 때 사용하는 드라이버 클래스명
spring.datasource.driverClassName=org.h2.Driver
# 데이터베이스의 사용자명
spring.datasource.username=sa
# 데이터베이스의 비밀번호
spring.datasource.password=
# copy con local.mv.db
# Ctrl + Z, Enter

# JPA
# 스프링부트와 하이버네이트를 함께 사용할 때 필요한 설정 항목. 
# 하이버네이트만의 SQL을 사용할 때 필요한 항목
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
# 엔티티를 기준으로 데이터의 테이블을 생성하는 규칙을 설정
spring.jpa.hibernate.ddl-auto=update
# none: 엔티티가 변경되더라도 DB를 변경하지 않음
# update: 엔티티의 변경된 부분만 DB에 적용
# validate: 엔티티와 테이블 간에 차이점이 있는지 검사만
# create: 스프링부트 서버를 시작할 때 테이블을 모두 삭제한 후 다시 생성
# create-drop: create와 동일하지만 스프링부트 서버를 종료할 때도 테이블을 모두 삭제
# => 개발 환경에서는 보통 update 모드, 운영 환경에서는 none 또는 validate